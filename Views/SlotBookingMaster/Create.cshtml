@model DOTNETCOREEXAMPLE.Models.Class_SLOT_BOOKING_MASTER

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h2></h2>


<script src="~/scripts/jquery-1.12.4.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css" rel="stylesheet" />
<style>


    div.ex3 {
        background-color: lightblue;
        width: 1024px;
        height: 110px;
        overflow: auto;
    }
</style>
<script>
    $("#SLOTBOOKINGDATETIME").change(function(){
    refreshProjects($(this).val());
    });
    $("#SERVICEGROUPID").change(function () {
        alert("Sai");
        refreshServices($(this).val());
    });
function refreshProjects(id) {
    var projects = $("#SLOTID");
    $.get('@Url.Action("GetSlotByDate", "SlotBookingMaster")', {dt:id},
        function (result) {
            // clear the dropdown
            projects.empty();
            // rebuild the dropdown
            var TodayDate = new Date();
            var endDate = new Date(Date.parse($("#SLOTBOOKINGDATETIME").val()));
            if (endDate > TodayDate) {
                $.each(result, function (i, e) {
                    // alert(TodayDate);
                    //  alert(endDate);
                    projects.append($('<option/>').text(e.Text).val(e.Value));

                });
            }
            else {
                $.each(result, function (i, e) {

                    // alert(TodayDate);
                    //  alert(endDate);

                    //alert("today");
                    //condition satisfied for today date too.
                    //                   alert(e.Text);
                    var subStr = e.Text.substring(0, 5);
                    var dt = new Date();
                    var time = dt.getHours() + ":" + dt.getMinutes();
                    //alert(subStr);
                    //alert(time);
                    var cm = compareTime(time, subStr);
                    if (cm == 2) {
                        projects.append($('<option/>').text(e.Text).val(e.Value));
                    }
                    else {

                    }
    });
            }
            });
    }
    function compareTime(str1, str2) {
     //   alert("compare");
        if (str1 === str2) {
            return 0;
        }
        var time1 = str1.split(':');


        var time2 = str2.split(':');
    //    alert(time1[0]);
      //  alert(time2[0]);
       // alert(time1[1]);
        //alert(time2[1]);
         if (eval(time1[0]) <= eval(time2[0]) && eval(time1[1]) < eval(time2[1])) {
          // alert(2);
            return 2;
        } else {
            return -1;
        }
    }
    function refreshServices(id) {
        var projects = $("#SERVICETYPEID");
    $.get('@Url.Action("GetServicesByServiceGroup", "SlotBookingMaster")', {dt:id},
        function (result) {
            // clear the dropdown
            projects.empty();
            // rebuild the dropdown
            $.each(result, function (i, e) {
                projects.append($('<option/>').text(e.Text).val(e.Value));
                
            });
            if (id == 2) {
                $("#consent").hide();
                $("#defaultCheck1").hide();
                $('label[for="defaultCheck1"]').hide();
             //   $("#lbldefaultCheck1").hide();
            } else {
                $("#consent").show();
                $("#defaultCheck1").show();
                $('label[for="defaultCheck1"]').show();
               // $("#lbldefaultCheck1").show();
                
            }
    });
    }

    $(function () {
        $("[name='PATIENTNAMES']").change(function () {
          //  alert("Sai");
            $("#PATIENTNAME").val($(this).val());
        });
    });
    function datechange(e) {
        refreshProjects(e);
    //    alert("refreshProjects");
      // alert( $("#SLOTBOOKINGDATETIME").val(e));
    }

    function ChangePATIENTNAME(e)
    {
       // alert(e);

     //   var dataItem = this.dataItem(e.item);

       //    alert(dataItem);
        $("#PATIENTNAME").val(e);
     //   alert("Sai");

        $.ajax({
            type: "POST",
            url: '/SlotBookingMaster/GetPatientDetailsForPatient',
            data: {
                valueOfDropDown: e
            },
            /* Response is the data returned from controller method */
            success: function (response) {
             //   alert(response.value1);
                var value1 = response.value1;
                $("#AGE").val(value1);
                var value2 = response.value2;
                $("#WEIGHT").val(value2);
                var value3 = response.value3;
                $("#GENDER").val(value3);
                var value4 = response.value4;
                $("#ADDRESS").val(value4);
                var value5 = response.value5;
                $("#ALTERNATEMOBILENUMBER").val(value5);
                var value6 = response.value6;
                $("#EMAIL").val(value6);

                //TODO : Use these values to update your page.

                return false;
            }
        });

    }
</script>
<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="section section-sm section-bottom">
        <div class="container">

            <div class="row ">

                <h3 class="title-text"> Book your Slot</h3>
                <div class="appointmentform">
                    <div>
                        <!-- <p class="text-theme appointment-sub-title">Please fill in your details to book your slot</p>-->

                    </div>
                    @*<form id="frmSubmit" onload="OnChange()">*@
                        <h3> User </h3>
                        <div class="field-group">

                            <div class="form-group  col-sm-2">
                                <label for="inputEmail">Phone Number</label>
                            </div>
                            <div class="form-group  col-sm-3">
                                
                                @*<input type="number" class="form-control" id="PHONENUMBER" name="PHONENUMBER" placeholder=" ">*@
                                @Html.TextBox("PHONENUMBER", (object)ViewBag.phonenumber, new { maxLength = 24, size = 24, @class = "form-control" })
                                @Html.HiddenFor(model => model.USERID, new { maxLength = 24, size = 24, @class = "form-control", Value = ViewBag.UserId })
                                @Html.ValidationMessageFor(m => m.PHONENUMBER, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group  col-sm-2 send-otp">
                                @*<button type="submit" class="btn btn-lg btn-primary" onclick="SendOTP()">Send OTP</button>*@
                            </div>
                            <div class="form-group  col-sm-2 ">
                                @*<label for="inputEmail">Enter OTP</label>*@
                            </div>
                            <div class="form-group  col-sm-3">
                                @*@Html.TextBox("enterotp", "", new { OnChange= "OnChange()",@id = "enterotp", @class = "form-control" })*@
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>

                            <div class="clear-fix"> </div>
                        </div>

                        <h3></h3>
                        Patient's Detail
                        @*@if (Convert.ToInt32(ViewBag.CountPATIENTNAMESFORPHONENUMBER) > 0)
                        {
                            <div style="text-align:left;">
                                @Html.DropDownList("PATIENTNAMES", new SelectList(ViewBag.PATIENTNAMESFORPHONENUMBER, "Value", "Text"), "--SELECT--", new { id = "PATIENTNAME1", @class = "form-control", @onchange = "ChangePATIENTNAME(this.value)" })
                            </div>
                            <div style="text-align:right;"><button style="text-align:right;" type="button" class="btn btn-lg btn-primary" onclick="EnableDisablePatient()">Add Patient</button></div>
                        }
                        else
                        {

                        }*@


                        <div class="field-group">
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Patient Name</label>
                                @*@Html.TextBox("PATIENTNAME", (object)ViewBag.PATIENTNAME, new { @class = "form-control" })*@
                                @ViewBag.PATIENTNAME
                                @*@Html.TextBoxFor(model => model.PATIENTNAME, new { @class = "form-control", value = "sai" })*@
                                @Html.Hidden("PATIENTID", (Object)ViewBag.PATIENTID, new { @class = "form-control" })





                                @Html.ValidationMessageFor(m => m.PATIENTNAME)
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Age (Yrs.) :</label>
                                @ViewBag.AGE
                                @*@Html.TextBox("AGE", (Object)ViewBag.AGE, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(m => m.AGE)
                                @*<input type="text" class="form-control" id="" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Weight (Kgs.) :</label>
                                @ViewBag.WEIGHT
                                @*@Html.TextBox("WEIGHT", (Object)ViewBag.WEIGHT,new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(m => m.WEIGHT)
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="slot">Gender :</label>
                                @ViewBag.GENDER
                                @*@Html.DropDownList("GENDER", new SelectList(ViewBag.GENDERS, "Value", "Text"), "--SELECT--", new { @class = "form-control", Value = @ViewBag.GENDER })*@

                                @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
                                @*<select id="slot" class="form-control">
            <option selected>Choose...</option>
            <option>Male</option>
            <option>Female</option>
        </select>*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="message">
                                    Address :
                                    <!-- <span class="required">*</span> -->
                                </label>
                                @ViewBag.ADDRESS
                                @*@Html.TextAreaFor(model => model.ADDRESS, new { @class = "form-control", Value = @ViewBag.ADDRESS })*@
                                @Html.ValidationMessageFor(m => m.ADDRESS)
                                @*<textarea class="form-control" rows="6" name="message" id="message"></textarea>*@
                            </div>

                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Alternate Mobile No. :</label>
                                @ViewBag.ALTERNATEMOBILENUMBER
                                @*@Html.TextBox("ALTERNATEMOBILENUMBER", (Object)ViewBag.ALTERNATEMOBILENUMBER, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(m => m.ALTERNATEMOBILENUMBER)
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Email ID :</label>
                                @ViewBag.EMAIL
                                @*@Html.TextBox("EMAIL", (Object)ViewBag.EMAIL, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(m => m.EMAIL)
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="clear-fix"> </div>
                        </div>
                        <h3> Service </h3>
                        <div class="field-group">
                            <div class="form-group  col-sm-6">
                                <label for="visit-type">Type of Visit</label>
                                @*@Html.DropDownListFor(x => x.SLOTID, new SelectList(ViewBag.SLOTS, "Value", "Text"), "--SELECT--", new { @class = "form-control" })*@
                                
                                @Html.TextBox("visit", "Home", new { maxLength = 24, size = 24, @class = "form-control", Value = "Home", @readonly = "readonly" })
                                @Html.HiddenFor(model => model.VISITTYPEID, new { maxLength = 24, size = 24, @class = "form-control", Value = 1 })
                                @*@Html.DropDownListFor(x => x.VISITTYPEID, new SelectList(ViewBag.VISITORTYPES, "Value", "Text"), "--SELECT--", new { @class = "form-control" })*@

                                @Html.ValidationMessageFor(model => model.SLOTID, "", new { @class = "text-danger" })
                                <script>
                                    function filterPackingTypes() {

                                        return {
                                            categoryId: $("#SLOBOOKINGDATETIME").val()
                                        };
                                    }
                                </script>


                                @*<select id="visit-type" class="form-control">
                <option selected>Choose...</option>
                <option>Morning(08:00-12:00 noon)</option>
                <option>Afternoon (12:01-16:00)</option>
                <option>Evening (16:00-20:00)</option>
                <option> Emergency  (20:00-20:30)</option>
                <option> Emergency  (20:30-21:00)</option>
            </select>*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="slot-type">Service Type </label>
                                @*<select id="slot-type" class="form-control">
                <option selected>Choose...</option>
                <option>X-Ray</option>
            </select>*@
                                @Html.DropDownListFor(x => x.SERVICEGROUPID, new SelectList(ViewBag.GROUPSERVICES, "Value", "Text"), "--SELECT--", new { @onchange = "refreshServices($(this).val())", @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.SERVICEGROUPID, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="visit-type">Select Body Part </label>
                                @Html.DropDownListFor(x => x.SERVICETYPEID, new SelectList(ViewBag.SERVICES, "Value", "Text"), "--SELECT--", new {  @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.SERVICETYPEID, "", new { @class = "text-danger" })
                                @*<select id="visit-type" class="form-control">
                <option selected>Choose...</option>
                <option>Chest</option>

            </select>*@
                            </div>

                            <div class="form-group  col-sm-6">
                                <label for="visit-date">Visit Date (dd/mm/yyyy)</label>

                                @Html.TextBoxFor(model => model.SLOTBOOKINGDATETIME, new { @onchange = "datechange(this.value)", type = "date", @class = "form-control", min = DateTime.Today.ToString("yyyy-MM-dd"), max = DateTime.Today.AddDays(7).ToString("yyyy-MM-dd") })
                                @Html.ValidationMessageFor(m => m.SLOTBOOKINGDATETIME)
                                @*<div class='input-group date' id='visitdate'>
                <input type='text' class="form-control" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="visit-type">Visit Slot</label>
                                @*@Html.DropDownListFor(x => x.SLOTID, new SelectList(ViewBag.SLOTS, "Value", "Text"), "--SELECT--", new { @class = "form-control" })*@
                                @Html.DropDownListFor(x => x.SLOTID, new SelectList(ViewBag.SLOTS, "Value", "Text"), "--SELECT--", new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.SLOTID, "", new { @class = "text-danger" })
                                <script>
                                    function filterPackingTypes() {

                                        return {
                                            categoryId: $("#SLOBOOKINGDATETIME").val()
                                        };
                                    }
                                </script>


                                @*<select id="visit-type" class="form-control">
                <option selected>Choose...</option>
                <option>Morning(08:00-12:00 noon)</option>
                <option>Afternoon (12:01-16:00)</option>
                <option>Evening (16:00-20:00)</option>
                <option> Emergency  (20:00-20:30)</option>
                <option> Emergency  (20:30-21:00)</option>
            </select>*@
                            </div>
                       
                            <div class="form-group  col-sm-6">
                                <label class="form-label" for="customFile">Payment Method</label>
                                @Html.DropDownListFor(x => x.PAYMENTMETHOD, new SelectList(ViewBag.PAYMENTMETHOD, "Value", "Text"), "--SELECT--", new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })

                                @*<input type="file" class="form-control file" id="customFile" />*@
                                @*<p>  A prescription must be shared with the technician before the procedure </p>*@
                            </div>
                            <div class="form-group  col-sm-6">

                                <label class="form-label" for="customFile">
                                    Upload Prescription or
                                    <button style="width:150px !important" id="btnVerify" onclick="OpenToClick()" name="btnVerify" type="button" class="btn btn-lg btn-primary">Click a Photo</button>

                                </label>
                                @*<input type="file" class="form-control file" id="customFile" />*@
                                <input type="file" class="form-control file" name="file" id="file" onchange="CloseToClick()" value="a.txt" /><br><br>
                                @Html.TextBoxFor(model => model.UPLOADORCLICKPHOTO, new { @readonly="readonly", maxLength = 24, size = 24, @class = "form-control" })
                                @*<input type="submit" value="Upload file" />*@

                                @ViewBag.Message
                                <p>  A prescription must be shared with the technician before the procedure </p>
                            </div>

                            <div class="form-group  col-sm-12">


                                <table border="0" cellpadding="0" cellspacing="0" style="display:none" id="divPhoto">
                                    <tr>
                                        <th align="center"><u>Live Camera</u></th>
                                        <th align="center"><u>Captured Picture</u></th>
                                    </tr>
                                    <tr>
                                        <td><div id="webcam"></div></td>
                                        <td><img id="imgCapture" /></td>
                                    </tr>
                                    <tr>
                                        <td align="center">
                                            <input type="button" id="btnCapture" value="Capture" />
                                        </td>
                                        <td align="center">
                                            @*<input type="button" id="btnUpload" value="Upload" disabled="disabled" />*@
                                        </td>
                                    </tr>
                                </table>
                                <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
                                <script src="~/Webcam_Plugin/WebCam.js"></script>
                                <script type="text/javascript">
                                    $(function () {
                                        Webcam.set({
                                            width: 320,
                                            height: 240,
                                            image_format: 'jpeg',
                                            jpeg_quality: 90
                                        });
                                        Webcam.attach('#webcam');
                                        $("#btnCapture").click(function () {
                                            Webcam.snap(function (data_uri) {
                                              //  alert(data_uri);
                                                $("#imgCapture")[0].src = data_uri;
                                                $("#btnUpload").removeAttr("disabled");
                                                //  alert($("#file").val());
                                                $("#UPLOADORCLICKPHOTO").val("CLICKPHOTO");
                                             //   alert($("#imgCapture")[0].src);
                                            });
                                        });
                                        //  $("#btnUpload").click(function () {
                                        $("#btnSubmit").click(function () {
                                            var imgcap = $("#imgCapture")[0].src;
                                            //alert(imgcap);
                                            $.ajax({
                                                url: "/SlotBookingMaster/SaveCapture",
                                                type: "post",
                                                data: "id=" + $("#imgCapture")[0].src,
                                                success: function (r) { }
                                            });
                                        });
                                    });
                                    var VerifyCapture = function () {
                                        if ($("#UPLOADORCLICKPHOTO").val()=="") { } else {
                                            // alert($("#mobile").val());
                                            $.ajax({
                                                url: "/SlotBookingMaster/SaveCapture/",
                                                type: "get",
                                                data: "{id: '" + $("#imgCapture")[0].src + "'}",
                                                dataType: "json",
                                                contentType: "application/json; charset=utf-8",
                                                success: function (data) {
                                                    //  alert(data);
                                                    if (data == "success") {
                                                        //  alert("UserExists");
                                                        //    alert("OTP sent Successfully");
                                                        document.getElementById("btnVerify").type = "submit";

                                                    }
                                                    else {
                                                        //  alert("failure");
                                                        document.getElementById("btnVerify").type = "button";

                                                        //alert("failed");

                                                    }


                                                }
                                            })
                                        }
                                    }
                                </script>




                            </div>
                            <div class="form-group  col-sm-6">

                                @*@Html.TextArea("Consent", new { @class = "form-control" })*@
                            </div>





                            <div id="success" class="mt-40">
                                <div class="icon-box bordered">
                                    <i class="fa fa-check fa-round fa-4x text-theme"></i>
                                    <h3 class="lead text-theme">Your message was successfully sent!</h3>
                                </div>
                            </div>

                            <div id="error" class="mt-40">
                                <div class="icon-box bordered">
                                    <i class="fa fa-lock fa-round fa-4x text-theme"></i>
                                    <h3 class="lead text-theme">Something went wrong, try refreshing and submitting the form again.</h3>
                                </div>
                            </div>
                            <div class="clear-fix"> </div>
                        </div>

                        <div class="form-group ">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
                                <label class="form-check-label" for="defaultCheck1" id="lbldefaultCheck1">
                                    I hereby give my consent for the procedure<br />

                                </label>
                                <div class="ex3" id="consent">
                                    I /the patient, do hereby agree, and give my consent for undergoing an X-ray diagnostic procedure(s) for myself/the patient conducted by the radio-technician provided by X-Rai, and Acknowledge that:<br />

                                    •	I have been made aware of the reason(s), risks, benefits, and all complications, that could arise during, or after the procedure. I have also been informed of the alternatives – If any- available for this procedure, along with the advantages and disadvantages of the same.<br />

                                    •	For Female Patients:<br />
                                    I declare that I/the patient am/is NOT pregnant at this point of time, and have no reason to suspect I am/is pregnant. I understand that if I/ the patient, withhold the fact that I/ the patient is pregnant at the time when specifically asked, it will harm the foetus/baby, and the responsibility for causing of this harm lies with me.<br />
                                    I have been made aware that X-Rays causes radiation exposure that is harmful, but without which, its not be able to bring out structural detail of various body parts required for imaging, and reporting leading to an impact on the future course of my/patient care.<br />
                                    •	I acknowledge I receive no guarantees regarding the benefits to be realized or the consequences of this procedure.<br />
                                    •	I acknowledge that I have read the above information in a language I understand, and fully understand the above information. I also understand, that I have the opportunity & right to ask questions pertaining to the test that I am going to undergo, and have asked these questions, that they have been answered to my satisfaction by the radio technician in a language that I fully comprehend and understand.<br />
                                    •	I affirm that this consent is given by me in my full senses.
                                </div>
                            </div>
                        </div>


                        <div class="form-group  ">
                            <label for="inputEmail"></label>
                            <button type="submit" class="btn btn-lg btn-primary" id="btnSubmit" OnClick = "VerifyCapture()">Submit</button>
                        </div>
                    @*</form>*@
                </div>



                <!-- col 2 after form-->
                <!-- col 2 after form-->
            </div>
        </div>
    </div>
    <script>

        function EnableDisablePatient() {
            //  alert("sai1");
            //  $("#PATIENTNAME").show()
            // $("#PATIENTNAMES").hide()

            //   $("#PATIENTNAME").prop("visible",true)
            //  $("#PATIENTNAMES").type("hidden");
            $("#PATIENTNAME").val("");
            $("#AGE").val("");
            $("#WEIGHT").val("");
            $("#GENDER").val("");
            $("#ADDRESS").val("");
            $("#ALTERNATEMOBILENUMBER").val("");
            $("#EMAIL").val("");
            $("#PATIENTNAMES").val("");
            //   $("#PATIENTNAME").attr('visible', false);

            $("#PATIENTNAMES").attr('visible', false);

            //alert("sai2");

        }
        var SendOTP = function () {

            $.ajax({
                url: "/Account/SendOTP",
                type: "post",
                success: function (data) {
                    alert(data);
                    if (data == "success") {

                        alert("OTP sent Successfully");
                    }
                    else {
                        alert("failed");

                    }


                }
            })

        }
    </script>


    <script type="text/javascript">
        $(document).ready(function () {
            $("#PATIENTNAMES").on("change", function () {
                //   alert("Sai");
            });

            $('#PATIENTNAMES').change(function () {
                //   alert("sai");
                //LoadRegion(this.value);
            });

            $("#SLOTBOOKINGDATETIME").datepicker({
                dateFormat: "yy-mm-dd",
                maxDate: new Date('2021-5-10')
            });
            //  alert("Sai");
            $('#SLOTBOOKINGDATETIME').datepicker({
                dateFormat: "yy-mm-dd",
                maxDate: 7,
                minDate: -10

            });

        });


        // alert("Sai");
        DateTimePicker();
        $("#SLOTBOOKINGDATETIME").change(function () {
            var date2 = $("#SLOTBOOKINGDATETIME").datepicker('getDate', '+1d');
            console.log(date2);
            date2.setDate(date2.getDate() + 1);
            $("#SLOTBOOKINGDATETIME").datepicker('option', 'minDate', date2);
            $("#SLOTBOOKINGDATETIME").datepicker('setDate', date2);
        });

        $("#btnSave").click(function () {
            alert($("#SLOTBOOKINGDATETIME").val());
            alert($("#SLOTBOOKINGDATETIME").val());
            var objStudentModel = { FromDate: $("#SLOTBOOKINGDATETIME").val(), ToDate: $("#SLOTBOOKINGDATETIME").val() };
            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(objStudentModel),
                success: function () {
                    alert('da');
                },
                error: function () {

                }
            });
        });
        //});

        function DateTimePicker() {
            $(".datepicker").datepicker({
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                showOn: 'button',
                sideBySide: true,
                controlType: 'select',
                buttonText: '<span class="glyphicon glyphicon-calendar" ></span>',
                minDate: new Date()
            });
        }

    </script>


    <script type="text/javascript">

        function OnChange() {
            //  alert("Sai");
            //if ($("#enterotp").val() == "") {


            //}
            //else {
            //    $("#btnSubmit").attr("disabled", false);

            //}
        }

        function OpenToClick() {
          //  alert("Sai");
            document.getElementById("divPhoto").style.display = "block"

        }
        function CloseToClick() {
            document.getElementById("divPhoto").style.display = "none"
            divPhoto
        }
    </script>
    </form>
 

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

